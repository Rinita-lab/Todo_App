{"ast":null,"code":"//creating a slice\nimport{createSlice}from\"@reduxjs/toolkit\";//defining our initial state\nconst initialState={todoList:[],sortCriteria:\"All\"};const ToDoSlice=createSlice({name:\"todo\",initialState,//all our reducers or functionalities required\nreducers:{//setting the todo list\nsetTodoList:(state,action)=>{state.todoList=action.payload;},//adding a task with data, id and initially marked as not complete\naddTodo:(state,action)=>{state.todoList.push({task:action.payload.task,id:action.payload.id,completed:false});},//filtering of tasks(all, completed, not completed)\nsortTodo:(state,action)=>{state.sortCriteria=action.payload;},//updating the task where current id matches an existing id\nupdateTodo:(state,action)=>{const{id,task}=action.payload;const index=state.todoList.findIndex(todo=>todo.id===id);state.todoList[index].task=task;},//marks whether a task is completed or not without deleting them\ntoggleCompleted:(state,action)=>{const{id}=action.payload;const index=state.todoList.findIndex(todo=>todo.id===id);state.todoList[index].completed=!state.todoList[index].completed;}}});//exporting the functionalities to be used in other modules\nexport const{setTodoList,addTodo,sortTodo,updateTodo,toggleCompleted}=ToDoSlice.actions;export default ToDoSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","todoList","sortCriteria","ToDoSlice","name","reducers","setTodoList","state","action","payload","addTodo","push","task","id","completed","sortTodo","updateTodo","index","findIndex","todo","toggleCompleted","actions","reducer"],"sources":["C:/Users/ABC/Downloads/shopping-cart-starter/starter/src/ToDoSlice.jsx"],"sourcesContent":["//creating a slice\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n//defining our initial state\r\nconst initialState = {\r\n  todoList: [],\r\n  sortCriteria: \"All\",\r\n};\r\n\r\nconst ToDoSlice = createSlice({\r\n  name: \"todo\",\r\n  initialState,\r\n  //all our reducers or functionalities required\r\n  reducers: {\r\n    //setting the todo list\r\n    setTodoList: (state, action) => {\r\n      state.todoList = action.payload;\r\n    },\r\n    //adding a task with data, id and initially marked as not complete\r\n    addTodo: (state, action) => {\r\n      state.todoList.push({\r\n        task: action.payload.task,\r\n        id: action.payload.id,\r\n        completed: false,\r\n      });\r\n    },\r\n    //filtering of tasks(all, completed, not completed)\r\n    sortTodo: (state, action) => {\r\n      state.sortCriteria = action.payload;\r\n    },\r\n    //updating the task where current id matches an existing id\r\n    updateTodo: (state, action) => {\r\n      const { id, task } = action.payload;\r\n      const index = state.todoList.findIndex((todo) => todo.id === id);\r\n      state.todoList[index].task = task;\r\n    },\r\n    //marks whether a task is completed or not without deleting them\r\n    toggleCompleted: (state, action) => {\r\n      const { id } = action.payload;\r\n      const index = state.todoList.findIndex((todo) => todo.id === id);\r\n      state.todoList[index].completed = !state.todoList[index].completed;\r\n    },\r\n  },\r\n});\r\n\r\n//exporting the functionalities to be used in other modules\r\nexport const { setTodoList, addTodo, sortTodo, updateTodo, toggleCompleted } = ToDoSlice.actions;\r\n\r\nexport default ToDoSlice.reducer;"],"mappings":"AAAA;AACA,OAASA,WAAW,KAAQ,kBAAkB,CAC9C;AACA,KAAM,CAAAC,YAAY,CAAG,CACnBC,QAAQ,CAAE,EAAE,CACZC,YAAY,CAAE,KAChB,CAAC,CAED,KAAM,CAAAC,SAAS,CAAGJ,WAAW,CAAC,CAC5BK,IAAI,CAAE,MAAM,CACZJ,YAAY,CACZ;AACAK,QAAQ,CAAE,CACR;AACAC,WAAW,CAAEA,CAACC,KAAK,CAAEC,MAAM,GAAK,CAC9BD,KAAK,CAACN,QAAQ,CAAGO,MAAM,CAACC,OAAO,CACjC,CAAC,CACD;AACAC,OAAO,CAAEA,CAACH,KAAK,CAAEC,MAAM,GAAK,CAC1BD,KAAK,CAACN,QAAQ,CAACU,IAAI,CAAC,CAClBC,IAAI,CAAEJ,MAAM,CAACC,OAAO,CAACG,IAAI,CACzBC,EAAE,CAAEL,MAAM,CAACC,OAAO,CAACI,EAAE,CACrBC,SAAS,CAAE,KACb,CAAC,CAAC,CACJ,CAAC,CACD;AACAC,QAAQ,CAAEA,CAACR,KAAK,CAAEC,MAAM,GAAK,CAC3BD,KAAK,CAACL,YAAY,CAAGM,MAAM,CAACC,OAAO,CACrC,CAAC,CACD;AACAO,UAAU,CAAEA,CAACT,KAAK,CAAEC,MAAM,GAAK,CAC7B,KAAM,CAAEK,EAAE,CAAED,IAAK,CAAC,CAAGJ,MAAM,CAACC,OAAO,CACnC,KAAM,CAAAQ,KAAK,CAAGV,KAAK,CAACN,QAAQ,CAACiB,SAAS,CAAEC,IAAI,EAAKA,IAAI,CAACN,EAAE,GAAKA,EAAE,CAAC,CAChEN,KAAK,CAACN,QAAQ,CAACgB,KAAK,CAAC,CAACL,IAAI,CAAGA,IAAI,CACnC,CAAC,CACD;AACAQ,eAAe,CAAEA,CAACb,KAAK,CAAEC,MAAM,GAAK,CAClC,KAAM,CAAEK,EAAG,CAAC,CAAGL,MAAM,CAACC,OAAO,CAC7B,KAAM,CAAAQ,KAAK,CAAGV,KAAK,CAACN,QAAQ,CAACiB,SAAS,CAAEC,IAAI,EAAKA,IAAI,CAACN,EAAE,GAAKA,EAAE,CAAC,CAChEN,KAAK,CAACN,QAAQ,CAACgB,KAAK,CAAC,CAACH,SAAS,CAAG,CAACP,KAAK,CAACN,QAAQ,CAACgB,KAAK,CAAC,CAACH,SAAS,CACpE,CACF,CACF,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAER,WAAW,CAAEI,OAAO,CAAEK,QAAQ,CAAEC,UAAU,CAAEI,eAAgB,CAAC,CAAGjB,SAAS,CAACkB,OAAO,CAEhG,cAAe,CAAAlB,SAAS,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}