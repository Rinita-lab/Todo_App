{"ast":null,"code":"import{useEffect,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";//import functionalities\nimport{setTodoList,addTodo,updateTodo,sortTodo,toggleCompleted}from\"../ToDoSlice\";//icons\nimport{TiPencil}from\"react-icons/ti\";import{BsTrash}from\"react-icons/bs\";//image\nimport notask from\"../assets/notask.png\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function TodoList(){const dispatch=useDispatch();const todoList=useSelector(state=>state.todo.todoList);const sortCriteria=useSelector(state=>state.todo.sortCriteria);//initial configurations\nconst[showModal,setShowModal]=useState(false);const[currentTodo,setCurrentTodo]=useState(null);const[newTask,setNewTask]=useState(\"\");//has tasks, store in local storage, useEffect() hook is called whenever change in todoList\nuseEffect(()=>{if(todoList.length>0){localStorage.setItem(\"todoList\",JSON.stringify(todoList));}},[todoList]);//gets the existing todo list from local storage(if exists) on first render[Implementing persistent storage]\nuseEffect(()=>{const localTodoList=JSON.parse(localStorage.getItem(\"todoList\"));if(localTodoList){dispatch(setTodoList(localTodoList));}},[]);//handler checks if value is not empty\n//if valid value found, adds task to todo with unique id(Date.now() is always unique)\nconst handleAddTodo=task=>{if(task.trim().length===0){alert(\"Please enter a task\");}else{dispatch(addTodo({task:task,id:Date.now()}));setNewTask(\"\");setShowModal(true);}};//handler checks if value is not empty\n//if valid value found, updates task to todo and closes modal\nconst handleUpdateToDoList=(id,task)=>{if(task.trim().length===0){alert(\"Please enter a task\");}else{dispatch(updateTodo({task:task,id:id}));setCurrentTodo(\"\");setNewTask(\"\");setShowModal(false);}};//handler gets the updated todo task list(except the one to be deleted) and sets in local storage\nconst handleDeleteToDo=id=>{const updatedToDoList=todoList.filter(todo=>todo.id!=id);dispatch(setTodoList(updatedToDoList));localStorage.setItem(\"todoList\",JSON.stringify(updatedToDoList));};//handler sets the status(all, completed, not completed)\nfunction handleSort(sortCriteria){dispatch(sortTodo(sortCriteria));}//filtering of tasks based on sortCriteria\nconst sortToDoList=todoList.filter(todo=>{if(sortCriteria===\"All\")return true;if(sortCriteria===\"Completed\"&&todo.completed)return true;if(sortCriteria===\"Not Completed\"&&!todo.completed)return true;return false;});//toggling handler to mark completed tasks without deleting them\nconst handleToggleCompleted=id=>{dispatch(toggleCompleted({id}));};return/*#__PURE__*/_jsxs(\"div\",{children:[showModal&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed w-full left-0 top-0 h-full bg-transparentBlack flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-8 rounded-md\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"border p-2 rounded-md outline-none mb-8\",value:newTask,onChange:e=>setNewTask(e.target.value),placeholder:currentTodo?\"Update your task here...\":\"Enter your task here...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-between\",children:currentTodo?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setShowModal(false);handleUpdateToDoList(currentTodo.id,newTask);},className:\"bg-[#fb7185] text-white py-3 px-10 rounded-md mx-3\",children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{className:\"bg-Tangaroa rounded-md text-white py-3 px-10 mx-3\",onClick:()=>setShowModal(false),children:\"Cancel\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"bg-Tangaroa rounded-md text-white py-3 px-10 mx-3\",onClick:()=>setShowModal(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:\"bg-[#fb7185] text-white py-3 px-10 rounded-md mx-3\",onClick:()=>{handleAddTodo(newTask);setShowModal(false);},children:\"Add\"})]})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\" flex items-center justify-center flex-col\",children:[todoList.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"min-w-[250px] min-[250px]\",children:/*#__PURE__*/_jsx(\"img\",{src:notask,alt:\"\",className:\"h-11/12 w-11/12\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"text-center text-Gray\",children:\"You have no todo's, please add one.\"})]}):/*#__PURE__*/ //if there are tasks, show the list of tasks\n_jsxs(\"div\",{className:\"container mx-auto mt-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center mb-6\",children:/*#__PURE__*/_jsxs(\"select\",{onChange:e=>handleSort(e.target.value),className:\"px-6 py-3 outline-none text-sm rounded-lg text-[#fb7185]\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"All\",className:\"text-sm\",children:\"All\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Completed\",className:\"text-sm\",children:\"Completed\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Not Completed\",className:\"text-sm\",children:\"Not Completed\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-10\",children:sortToDoList.map(todo=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-6 bg-slate-700 mx-auto w-full md:w-[75%] rounded-md p-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(todo.completed?\"line-through text-greenTeal\":\"text-[#fb7185]\"),onClick:()=>{handleToggleCompleted(todo.id);},children:todo.task}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\" bg-blue-300 text-white p-1 rounded-md ml-2\",onClick:()=>{setShowModal(true);setCurrentTodo(todo);setNewTask(todo.task);},children:/*#__PURE__*/_jsx(TiPencil,{})}),/*#__PURE__*/_jsx(\"button\",{className:\"bg-[#fb7185] text-white p-1 rounded-md ml-2\",onClick:()=>handleDeleteToDo(todo.id),children:/*#__PURE__*/_jsx(BsTrash,{})})]})]},todo.id))})]}),/*#__PURE__*/_jsx(\"button\",{className:\"bg-[#fb7185] text-center text-white py-3 px-10 rounded-md mb-12\",onClick:()=>{setShowModal(true);},children:\"Add Task\"})]})]});}export default TodoList;","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","setTodoList","addTodo","updateTodo","sortTodo","toggleCompleted","TiPencil","BsTrash","notask","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","TodoList","dispatch","todoList","state","todo","sortCriteria","showModal","setShowModal","currentTodo","setCurrentTodo","newTask","setNewTask","length","localStorage","setItem","JSON","stringify","localTodoList","parse","getItem","handleAddTodo","task","trim","alert","id","Date","now","handleUpdateToDoList","handleDeleteToDo","updatedToDoList","filter","handleSort","sortToDoList","completed","handleToggleCompleted","children","className","value","onChange","e","target","placeholder","onClick","src","alt","map","concat"],"sources":["C:/Users/ABC/Downloads/shopping-cart-starter/starter/src/components/ToDoList.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n//import functionalities\r\nimport {\r\n  setTodoList,\r\n  addTodo,\r\n  updateTodo,\r\n  sortTodo,\r\n  toggleCompleted,\r\n} from \"../ToDoSlice\";\r\n\r\n//icons\r\nimport { TiPencil } from \"react-icons/ti\";\r\nimport { BsTrash } from \"react-icons/bs\";\r\n\r\n//image\r\nimport notask from \"../assets/notask.png\";\r\n\r\n\r\nfunction TodoList() {\r\n  const dispatch = useDispatch();\r\n  const todoList = useSelector((state) => state.todo.todoList);\r\n  const sortCriteria = useSelector((state) => state.todo.sortCriteria);\r\n\r\n  //initial configurations\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [currentTodo, setCurrentTodo] = useState(null);\r\n  const [newTask, setNewTask] = useState(\"\");\r\n\r\n  //has tasks, store in local storage, useEffect() hook is called whenever change in todoList\r\n  useEffect(() => {\r\n    if (todoList.length > 0) {\r\n      localStorage.setItem(\"todoList\", JSON.stringify(todoList));\r\n    }\r\n  }, [todoList]);\r\n\r\n  //gets the existing todo list from local storage(if exists) on first render[Implementing persistent storage]\r\n  useEffect(() => {\r\n    const localTodoList = JSON.parse(localStorage.getItem(\"todoList\"));\r\n    if (localTodoList) {\r\n      dispatch(setTodoList(localTodoList));\r\n    }\r\n  }, []);\r\n\r\n  //handler checks if value is not empty\r\n  //if valid value found, adds task to todo with unique id(Date.now() is always unique)\r\n  const handleAddTodo = (task) => {\r\n    if (task.trim().length === 0) {\r\n      alert(\"Please enter a task\");\r\n    } else {\r\n      dispatch(addTodo({ task: task, id: Date.now() }));\r\n      setNewTask(\"\");\r\n      setShowModal(true);\r\n    }\r\n  };\r\n\r\n  //handler checks if value is not empty\r\n  //if valid value found, updates task to todo and closes modal\r\n  const handleUpdateToDoList = (id, task) => {\r\n    if (task.trim().length === 0) {\r\n      alert(\"Please enter a task\");\r\n    } else {\r\n      dispatch(updateTodo({ task: task, id: id }));\r\n      setCurrentTodo(\"\");\r\n      setNewTask(\"\");\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  //handler gets the updated todo task list(except the one to be deleted) and sets in local storage\r\n  const handleDeleteToDo = (id) => {\r\n    const updatedToDoList = todoList.filter((todo) => todo.id != id);\r\n    dispatch(setTodoList(updatedToDoList));\r\n    localStorage.setItem(\"todoList\", JSON.stringify(updatedToDoList));\r\n  };\r\n\r\n  //handler sets the status(all, completed, not completed)\r\n  function handleSort(sortCriteria) {\r\n    dispatch(sortTodo(sortCriteria));\r\n  }\r\n\r\n  //filtering of tasks based on sortCriteria\r\n  const sortToDoList = todoList.filter((todo) => {\r\n    if (sortCriteria === \"All\") return true;\r\n    if (sortCriteria === \"Completed\" && todo.completed) return true;\r\n    if (sortCriteria === \"Not Completed\" && !todo.completed) return true;\r\n    return false;\r\n  });\r\n\r\n  //toggling handler to mark completed tasks without deleting them\r\n  const handleToggleCompleted = (id) => {\r\n    dispatch(toggleCompleted({ id }));\r\n  };\r\n  return (\r\n    <div>\r\n       {/* modal open*/}\r\n      {showModal && (\r\n        <div className=\"fixed w-full left-0 top-0 h-full bg-transparentBlack flex items-center justify-center\">\r\n          <div className=\"bg-white p-8 rounded-md\">\r\n\r\n             {/*entering the task */}\r\n            <input\r\n              className=\"border p-2 rounded-md outline-none mb-8\"\r\n              value={newTask}\r\n              onChange={(e) => setNewTask(e.target.value)}\r\n              placeholder={\r\n                currentTodo ? \"Update your task here...\" : \"Enter your task here...\"\r\n              }\r\n            />\r\n\r\n            <div className=\"flex justify-between\">\r\n               {/* if there exists a current todo value, we are updating*/}\r\n              {currentTodo ? (\r\n                <>\r\n                  <button\r\n                    onClick={() => {\r\n                      setShowModal(false);\r\n                      handleUpdateToDoList(currentTodo.id, newTask);\r\n                    }}\r\n                    className=\"bg-[#fb7185] text-white py-3 px-10 rounded-md mx-3\">\r\n                    Save\r\n                  </button>\r\n                  <button\r\n                    className=\"bg-Tangaroa rounded-md text-white py-3 px-10 mx-3\"\r\n                    onClick={() => setShowModal(false)}>\r\n                    Cancel\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                 {/* if there is no current todo value, we are adding a new task*/}\r\n                  <button\r\n                    className=\"bg-Tangaroa rounded-md text-white py-3 px-10 mx-3\"\r\n                    onClick={() => setShowModal(false)}>\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    className=\"bg-[#fb7185] text-white py-3 px-10 rounded-md mx-3\"\r\n                    onClick={() => {\r\n                      handleAddTodo(newTask);\r\n                      setShowModal(false);\r\n                    }}>\r\n                    Add\r\n                  </button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n\r\n       \r\n      <div className=\" flex items-center justify-center flex-col\">\r\n         {/* if there are no tasks, set the image */}\r\n        {todoList.length === 0 ? (\r\n          <div className=\"mb-6\">\r\n            <div className=\"min-w-[250px] min-[250px]\">\r\n              <img src={notask} alt=\"\" className=\"h-11/12 w-11/12\"/>\r\n            </div>\r\n            <p className=\"text-center text-Gray\">\r\n              You have no todo's, please add one.\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          //if there are tasks, show the list of tasks\r\n          <div className=\"container mx-auto mt-6\">\r\n            <div className=\"flex justify-center mb-6\">\r\n               {/* filtering tasks*/}\r\n              <select\r\n                onChange={(e) => handleSort(e.target.value)}\r\n                className=\"px-6 py-3 outline-none text-sm rounded-lg text-[#fb7185]\">\r\n                <option value=\"All\" className=\"text-sm\">\r\n                  All\r\n                </option>\r\n                <option value=\"Completed\" className=\"text-sm\">\r\n                  Completed\r\n                </option>\r\n                <option value=\"Not Completed\" className=\"text-sm\">\r\n                  Not Completed\r\n                </option>\r\n              </select>\r\n            </div>\r\n\r\n\r\n            {/* shows tasks using map function( like creating multiple cards with different values)*/}\r\n            <div className=\"mt-10\">\r\n              {sortToDoList.map((todo) => (\r\n                <div\r\n                  key={todo.id}\r\n                  className=\"flex items-center justify-between mb-6 bg-slate-700 mx-auto w-full md:w-[75%] rounded-md p-4\">\r\n                   {/* toggle between completed or not by clicking on the task name*/}\r\n                  <div\r\n                    className={`${\r\n                      todo.completed\r\n                        ? \"line-through text-greenTeal\"\r\n                        : \"text-[#fb7185]\"\r\n                    }`}\r\n                    onClick={() => {\r\n                      handleToggleCompleted(todo.id);\r\n                    }}>\r\n                    {todo.task}\r\n                  </div>\r\n                  <div>\r\n                     {/* update button*/}\r\n                    <button\r\n                      className=\" bg-blue-300 text-white p-1 rounded-md ml-2\"\r\n                      onClick={() => {\r\n                        setShowModal(true);\r\n                        setCurrentTodo(todo);\r\n                        setNewTask(todo.task);\r\n                      }}>\r\n                      <TiPencil />\r\n                    </button>\r\n\r\n                     {/* delete button*/}\r\n                    <button\r\n                      className=\"bg-[#fb7185] text-white p-1 rounded-md ml-2\"\r\n                      onClick={() => handleDeleteToDo(todo.id)}>\r\n                      <BsTrash />\r\n                    </button>\r\n\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n         {/* add task button which opens modal*/}\r\n        <button\r\n          className=\"bg-[#fb7185] text-center text-white py-3 px-10 rounded-md mb-12\"\r\n          onClick={() => {\r\n            setShowModal(true);\r\n          }}>\r\n          Add Task\r\n        </button>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}